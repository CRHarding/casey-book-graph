create table USERS (
    ID SERIAL,
    USERNAME varchar(100) NOT NULL UNIQUE,
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    EMAIL varchar(100),
    LOCATION varchar(100),
    ABOUT_ME varchar(500),
    PASSWORD varchar(100),
    TIME_ADDED TIMESTAMP default CURRENT_TIMESTAMP,
    CONSTRAINT PK_USERS PRIMARY KEY (id)
);

create table FRIENDS (
    ID serial PRIMARY KEY,
    STATUS integer,
    FRIEND_SENT_REQUEST integer,
    FRIEND_RECEIVED_REQUEST integer,
    TIME_ADDED TIMESTAMP default CURRENT_TIMESTAMP,
    FOREIGN KEY (FRIEND_SENT_REQUEST) REFERENCES USERS(id),
    FOREIGN KEY (FRIEND_RECEIVED_REQUEST) REFERENCES USERS(id),
    CONSTRAINT UNIQUE_IDS UNIQUE (FRIEND_SENT_REQUEST, FRIEND_RECEIVED_REQUEST)
);

create table POSTS (
    ID serial PRIMARY KEY,
    TITLE varchar(50),
    POSTER_ID integer,
    POST_TEXT varchar(500),
    NUMBER_OF_LIKES integer DEFAULT 0,
    NUMBER_OF_COMMENTS integer DEFAULT 0,
    ABLE_TO_VIEW integer DEFAULT 0,
    TIME_ADDED TIMESTAMP default CURRENT_TIMESTAMP,
    FOREIGN KEY (POSTER_ID) REFERENCES USERS(id),
    CONSTRAINT UNIQUE_ID UNIQUE (POSTER_ID)
);

create table COMMENTS (
    ID serial PRIMARY KEY,
    COMMENTER_ID integer,
    POST_ID integer,
    COMMENT_TEXT varchar(500),
    NUMBER_OF_LIKES integer DEFAULT 0,
    TIME_ADDED TIMESTAMP default CURRENT_TIMESTAMP,
    FOREIGN KEY (COMMENTER_ID) REFERENCES USERS(id),
    FOREIGN KEY (POST_ID) REFERENCES POSTS(id),
    CONSTRAINT UNIQUE_IDS UNIQUE (COMMENTER_ID, POST_ID)
)